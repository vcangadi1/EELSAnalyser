function [Z,elname,eledge,edge_shape,shell] = edge_database(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE Import data from a spreadsheet
%   [Z,elname,eledge,edge_shape] = IMPORTFILE(FILE) reads data from the
%   first worksheet in the Microsoft Excel spreadsheet file named FILE and
%   returns the data as column vectors.
%
%   [Z,elname,eledge,edge_shape] = IMPORTFILE(FILE,SHEET) reads from the
%   specified worksheet.
%
%   [Z,elname,eledge,edge_shape] = IMPORTFILE(FILE,SHEET,STARTROW,ENDROW)
%   reads from the specified worksheet for the specified row interval(s).
%   Specify STARTROW and ENDROW as a pair of scalars or vectors of matching
%   size for dis-contiguous row intervals. To read to the end of the file
%   specify an ENDROW of inf.%
% Example:
%   [Z,elname,eledge,edge_shape] = importfile('edges_database.xlsx','Sheet1',1,27);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2015/09/21 14:28:04

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 1;
    endRow = 25;
end

%% Import the data
[~, ~, raw] = xlsread(workbookFile, sheetName, sprintf('A%d:E%d',startRow(1),endRow(1)));
for block=2:length(startRow)
    [~, ~, tmpRawBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:E%d',startRow(block),endRow(block)));
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,[2,4,5]);
raw = raw(:,[1,3]);

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Z = data(:,1);
elname = cellVectors(:,1);
eledge = data(:,2);
edge_shape = cellVectors(:,2);
shell = cellVectors(:,3);

